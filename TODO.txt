################
######TODO######
################
* backend *
    - establish relationships between users app and feed app

* frontend *
    routes:
        - button for password email reset 
        -/users 
          * implement a filter by username search bar feature

    * fully implement the likes feature
    * react router page transitions
    * component transitions

  * fix *
    * need to check expiration time when app loads
    - fix mobile scroll to top 
    - fix image modal size

  * extra *


################
#CHANGES I MADE#
################
- fix desktop layout of profile & user profile page
- media queries for responsive profile page layout
- added more dummy data on backend to see if menu tree scales
- started frontend for password reset

* in progress * 
  - finish up the password reset page
  

#################
####COMPLETED####
#################
- added local postgresql database
- django make url parameter lowercase without spaces
- established 1 to many relationship between brand and lookbooks
- feed app 
- filter lookbooks by season parameter
- create picture model
- established 1 to many relationship between lookbook and pictures
- added admin upload fields for image uploads
- connect django w/ amazon s3 bucket to host images
- setup aws cdn for s3
- detail view for individual pictures
- added font
- menu with treeitem api 
- figured out how to list multiple seasons
- created custom urls depending on nav links 
- found out how to display photos
- mui grid list for image gallery & spinner
- combined navbar + treeview 
- order the brand names by name 
- refactor LookbookListView component
- changed font for treeview menu
- changed image gallery component
- custom scroll bar
- div container for brand and season
- order the lookbooks by date 
    * used SerializerMethodField()
- upload multiple photos at once in django admin
    * using postman 
- implemented lazy load
- force refresh when clicking on menu tree link
- hide app bar when modal is clicked
- light & dark theme mode context
- display the brand name not url_param
- duplicate key css styling fixed with Radium
- dynamically themed (w/ hover) scroll to top button 
- persist light/dark mode changes in localStorage
- mui switch for theme toggle
- customized switch color
- icons for light/dark mode
- tweaked drawer width
- fixed desktop modal view
- started home page & created link to redirect to home
- create url for carousel is opened 
- created picture detail view -> renders the image modal component
- background color w/ helmet
- centered title
- styled loading icon 
- placeholder css for homepage brand selection
- learned how to connect to localhost from phone 
- dynamic background based on theme mode
- dynamic headers based on theme mode
- fixed switch icon colors
- created a readme
- redirect link to specific brand page from home page
- switch button placed on lookbook list view
- created lookbooks list view
- redirect selected lookbook to picture list page
- dynamically styled grid component
- brand name headers on lookbooklistview
- test_feed_urls .py
- test_feed_models.py
- test_feed_views.py (look at notes)
- test_feed_serializers.py 
- split api root
    - api/brands/... 
    - api/users/...
- started users app
    - list
    - detail
    - update
- profile page signal
- token authentication
- changed view to generic class based views
- custom permission (owner&admin / owner only for update/delete)
- started /register frontend
- using rest-auth for login & logout
- created auth context 
- /login route & storing token in local storage
- logout button
- set up authReducer for login and register
- refactored authContext
- npm i reinspect -> monitors dispatches with redux dev tools
- display token to be fetched when user is created
- styled & customized the sign up & log in forms
- fixed iPhone bug with react router
- fixed switch icon alignment
- updated read me with new demo link
- updated readme
- image field for profile 
- salt image & upload new picture to aws
- separate update signal
- updated fields for both profile and user model are saved
- password is updated & hashed 
- added bio to profile model
- started unittest users urls
- test_users_urls.py 
- test_users_models.py
- test_users_views.py
* fade transition theme mode switch
- change user lookup from id to username
- refactor grey switch into its own component
- create profile page show on navbar
- need to store username in localStorage when user logs in 
- restrict access to profile route
  * redirects to log in page if user is not logged in
- updated pytests
- dynamically theme the tab panel
- edit profile button
- MyProfile.js & UserProfile.js (profile of any user w/ no edit icon)
- set up django-rest-auth password reset w/ email
- added location & date joined to users api
- started mui forms for profile update
- prepopulated avatar and forms with current user data
- update avatar and fields from react to drf
- tweaked image modal header
- figured out how to display like and close button on modal 
- implemented history instead of window.location...
- fixed image modal page layout
- add expiration date to log in & log out user after time has expired
- optional photo for profile update
- responsive drawer width
- display log in error message 
- display sign up error message
  * look at notes
- clear error messages after displayed
- replaced history.push with window.history.pushState(...)
- when image modal opens, the url is changed to a shareable link
- mui button for picture upload